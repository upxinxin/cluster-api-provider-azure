apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  kubeadmConfigSpec:
    postKubeadmCommands:
      # This frees up :53 on the host for the coredns pods
      - echo "DNSStubListener=no" >> /etc/systemd/resolved.conf
      - mv /etc/resolv.conf /etc/resolv.conf.OLD && ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf
      - systemctl restart systemd-resolved
    initConfiguration:
      nodeRegistration:
        name: '{{ ds.meta_data["local_hostname"] }}'
        kubeletExtraArgs:
          cloud-provider: azure
          cloud-config: /etc/kubernetes/azure.json
          azure-container-registry-config: /etc/kubernetes/azure.json
      localAPIEndpoint:
        bindPort: 6443
    joinConfiguration:
      nodeRegistration:
        name: '{{ ds.meta_data["local_hostname"] }}'
        kubeletExtraArgs:
          cloud-provider: azure
          cloud-config: /etc/kubernetes/azure.json
          azure-container-registry-config: /etc/kubernetes/azure.json
      controlPlane:
        localAPIEndpoint:
          bindPort: 6443
    clusterConfiguration:
      apiServer:
        timeoutForControlPlane: 20m
        extraArgs:
          cloud-provider: azure
          cloud-config: /etc/kubernetes/azure.json
      controllerManager:
        extraArgs:
          cloud-provider: azure
          cloud-config: /etc/kubernetes/azure.json
          #required for ipv6 using calico
          allocate-node-cidrs: "true"
          cluster-cidr: "10.244.0.0/16,2001:1234:5678:9a40::/58"
          configure-cloud-routes: "true"
